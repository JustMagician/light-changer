from "parts/ST_MMBT3904/ST_MMBT3904.ato" import ST_MMBT3904_package

from "atopile/indicator-leds/indicator-leds.ato" import LEDIndicatorRed


"""
Dual LED flasher (astable multivibrator) using two NPN BJTs.
Supply: 5V via a 2-pin header.
"""

import ElectricPower, Electrical, Resistor, Capacitor, TestPoint

module App:
    # --- Power rail ---
    v5 = new ElectricPower
    # v5.voltage = 5V
    assert v5.voltage is 5V +/- 10%

    # --- I/O pads for power (use `pin` if you just want pads / bring-in) ---
    # If you prefer a real header footprint, run `ato create part` for a 1x02 header and import it.
    power_in = new Electrical
    power_point = new TestPoint
    power_in ~ power_point.contact
    power_in.override_net_name = "VIN_PAD"
    # Map pads to rails:
    power_in ~ v5.hv
    # Add a second pad to GND:
    gnd_in = new Electrical
    ground_point = new TestPoint
    gnd_in ~ ground_point.contact
    gnd_in ~ v5.lv

    # --- Active devices ---
    q1 = new ST_MMBT3904_package
    q1.override_net_name = "Q1"
    q2 = new ST_MMBT3904_package
    q2.override_net_name = "Q2"

    # --- LEDs ---
    led1 = new LEDIndicatorRed
    led1.override_net_name = "LED1"
    led2 = new LEDIndicatorRed
    led2.override_net_name = "LED2"

    # --- Collector resistors (also act as LED series resistors) ---
    # rc1 = new Resistor
    # rc1.resistance = 330ohm +/- 5%
    # rc1.package = "0603"

    # rc2 = new Resistor
    # rc2.resistance = 330ohm +/- 5%
    # rc2.package = "0603"

    # --- Base resistors ---
    rb1 = new Resistor
    rb1.resistance = 100kohm +/- 5%
    rb1.package = "0603"
    rb1.override_net_name = "R1"

    rb2 = new Resistor
    rb2.resistance = 100kohm +/- 5%
    rb2.package = "0603"

    # --- Timing capacitors ---
    c1 = new Capacitor
    c1.capacitance = 10uF +/- 10%
    c1.package = "0603"   # you can choose 0805 if 10uF 0603 is hard to source

    c2 = new Capacitor
    c2.capacitance = 10uF +/- 10%
    c2.package = "0603"

    # --- Assert timing math for the period ---
    # freq = 1 / R * C
    assert rb1.resistance * c1.capacitance within 0.8sec to 1.2sec
    assert rb2.resistance * c2.capacitance within 0.8sec to 1.2sec


    # --- Wiring (classic astable topology) ---

    # Collectors go to VCC through RC; LEDs placed at collectors to VCC for visual clarity
    # v5.hv ~> rc1 ~> q1.C
    # v5.hv ~> rc2 ~> q2.C

    # LED1
    v5.hv ~ led1.power.hv
    led1.low ~ q1.C
    led1.low ~ c1.unnamed[1]

    # LED2
    v5.hv ~ led2.power.hv
    led2.low ~ q2.C
    led2.low ~ c2.unnamed[1]

    # R1
    v5.hv ~ rb1.unnamed[0]
    rb1.unnamed[1] ~ q1.B
    rb1.unnamed[1] ~ c1.unnamed[0]

    # R2
    v5.hv ~ rb2.unnamed[0]
    rb2.unnamed[1] ~ q2.B
    rb2.unnamed[1] ~ c2.unnamed[0]

    # Capacitors
    c1.unnamed[1] ~ q1.C
    c1.unnamed[0] ~ q2.B
    c2.unnamed[1] ~ q2.C
    c2.unnamed[0] ~ q1.B

    # Transistors
    q1.E ~ v5.lv
    q2.E ~ v5.lv
